#!/usr/bin/env python
"""
Extracts all links from a given URL. v. 1.0 / 2011 by mitchell <mitchell@csc.bg>.
"""

#       Copyright (c) 2011, Cyber Security Consulting, Ltd. (csc.bg)
#       All rights reserved.
#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the  nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#       

import sys
from lxml.html import parse
from urllib2 import urlopen,URLError
from httplib import InvalidURL
import re
import os

__author__ = "mitchell@csc.bg"
__version__ = "1.0"

def usage():
    """Prints the usage and exits gracefully."""

    print"""
%s v. %s by <%s>

Usage: %s <url>

If the URL contains special symbols, put (single) quotes around it.
""" % (os.path.basename(sys.argv[0]), __version__, __author__, os.path.basename(sys.argv[0]))

    sys.exit()

def build_URL(s):
    """Builds the URL from a string."""

    if s.startswith('http://') or s.startswith('https://'):
        url = s
    else:
        url = "http://%s" % (s)

    return url

def get_Links(url):
    """Enumerates and prints out all links for the URL."""

    try:
        p = urlopen(url)
    except(URLError) as url_err:
        print "Cannot open %s.\nError: %s" % (url, url_err)
        sys.exit()
    except(InvalidURL) as inv_err:
        print "%s is not a valid URL.\nError: %s" % (url, inv_err)
        sys.exit()

    page = parse(p).getroot()
    for link in page.iterlinks():
        element = str(link[0])
        link_type = re.sub(' at.*>', '', re.sub('<Element ', '', element))
        print "[%s] %s => %s" % (link_type, link[1], link[2])

def main():
    """The main function."""
    
    if len(sys.argv) != 2 or sys.argv[1] == '-h' or sys.argv[1] == '--help':
        usage()

    url = build_URL(sys.argv[1])
    get_Links(url)

if __name__ == "__main__":
    main()
