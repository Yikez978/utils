#!/usr/bin/env python

#       Copyright (c) 2011, Cyber Security Consulting, Ltd. (csc.bg)
#       All rights reserved.
#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the  nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

"""NAME
        smtp.py

SYNOPSIS
        smtp.py <e-mail address>

DESCRIPTION
        Opens an SMTP session to each MX record for the hostname from the e-mail address to check if it will accept messages for this address.

OPTIONS
        -v	Prints the version information
	-h	Prints the info document
	-f	Force. The script uses a shitty regexp to check the validity of the e-mail addresses. Use this option to force the usage of this e-mail address.

EXIT STATUS
	0       Success
	1       Wrong arguments
	2       Could not get the MX record(s)
	3       Could not resolve hostname
	4	Could not connect to hostname
	5	Keyboard interrupt
	100	Import error

EXAMPLES
	smtp.py mitchell@csc.bg

HISTORY
	0.1     Basic functionality
	0.2     Checks every MX record
	0.3     Some error handling, options.
"""

__author__ = "mitchell (at) csc.bg"
__version__ = "0.3"
__date__ = "2011/01/11 10:19 EET"
__copyright__ = "Cyber Security Consulting"
__license__ = "Python"

import socket,smtplib,sys,re
try:
	import DNS
except ImportError:
	print "Please install the PyDNS module, Debian / Ubuntu package: python-dns"
	sys.exit(100)


arguments = sys.argv
my_email = '<mitchell@tufala.net>'
force = ''

def usage():
        print """
Usage: %s <e-mail address>

smtp.py -h for complete help
""" % arguments[0]

if len(sys.argv) < 2:
        usage()
        sys.exit(1)

if arguments[1] == '-h':
	print __doc__
	sys.exit(0)
elif arguments[1] == '-v':
	print "\nVersion: %s\nAuthor: %s\nCopyright: %s\nLicense: %s\nDate: %s\n" % (__version__, __author__, __copyright__, __license__, __date__)
	sys.exit(0)
elif arguments[1] == '-f':
	force = "yes"
	arguments.pop(0)


try:
	if not re.findall("[a-zA-Z0-9+_\-\.]+@[0-9a-zA-Z][.-0-9a-zA-Z]*.[a-zA-Z]+", arguments[1]):
		if not force:
			print "\n\nE-mail address not valid. Use -f to force or %s -h for help.\n" % arguments[0]
			sys.exit(1)
except IndexError:
	print "Please, provide an e-mail address"
	sys.exit(1)

email = arguments[1]
smtp_email = "<%s>" % email
try:
	hostname = email.split('@',1) [1]
except IndexError:
	print "E-mail addresses should have the '@' symbol."
	sys.exit(1)
if not hostname:
	print "\nCould not get hostname"
	usage()
	sys.exit(1)

print "\nGetting MX records for %s...\n" % hostname
DNS.DiscoverNameServers()
try:
	mx_hosts = DNS.mxlookup(hostname)
except DNS.Lib.PackError,err:
	print "DNSLib error: %s\n" % err
	sys.exit(2)
except DNS.Base.DNSError,err:
	print "\nDNSLib error: %s\n" % err
	sys.exit(2)

if not mx_hosts:
	print "Could not get MX records for '%s', please, check the hostname." % hostname
	usage()
	sys.exit(2)

for mx_host in mx_hosts:
	try:
		print "Connecting to %s..." % mx_host[1]
		try:
			s = smtplib.SMTP(mx_host[1])
		except socket.gaierror, err:
			print "Could not resolve hostname '%s': %s" % (hostname, err[1])
			sys.exit(3)
		except socket.error, err:
			print "Could not connect to %s: %s" % (hostname, err[1])
			sys.exit(4)
			
		print "Connected. Saying helo..."
		s.putcmd("helo", "tufala.net")
		helo_reply = s.getreply()
		print "Server replied with code: %s, server message was: %s" % (helo_reply[0],helo_reply[1])
		
		print "Sending MAIL FROM command (%s)..." % my_email
		s.putcmd("mail from:", my_email)
		mail_from_reply = s.getreply()
		print "Server replied with code: %s, server message was: %s" % (mail_from_reply[0],mail_from_reply[1])
		
		print "Sending RCPT TO command (%s)..." % smtp_email
		s.putcmd("rcpt to:", smtp_email)
		rcpt_to_reply = s.getreply()
		
		print "SMTP return code: %s, SMTP server reply: %s\n" % (rcpt_to_reply[0], rcpt_to_reply[1])
	except KeyboardInterrupt:
		print "\nStopping..."
		sys.exit(5)
