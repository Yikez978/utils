#!/usr/bin/env python

"""
dehash.py 0.1 / 2011 by mitchell <mitchell@csc.bg>.
"""
#       Copyright (c) 2011, Cyber Security Consulting, Ltd. (csc.bg)
#       All rights reserved.
#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the  nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

from urllib import urlencode
import urllib2, sys
from BeautifulSoup import BeautifulSoup

def check_args():
	if len(sys.argv) != 2:
		print 'Usage: %s <MD5 hash>' % sys.argv[0]
		sys.exit(1)
	elif len(sys.argv[1]) !=32:
		print 'MD5 hash should be 32 characters, and you provided %d.' % len(sys.argv[1])
       		sys.exit(2)



def md5_decrypter(site,field):
	user_agent = 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.12) Gecko/20101027 Ubuntu/10.10 (maverick) Firefox/3.6.12'
	headers = { 'User-Agent' : user_agent }
	hash = sys.argv[1]
	input = { field: hash}
	data = urlencode(input)

	request = urllib2.Request(site, data, headers)
	response = urllib2.urlopen(request)
	decrypter_page = response.read()

	soup = BeautifulSoup(decrypter_page)
	try:
		resTag = soup.findAll('b', { "class" : "res" })[1].contents[0]
	except:
		print 'Sorry, %s is not found or not valid...or I am doing something terribly wrong.' % hash
		sys.exit(3)

        return resTag

def main():
	print "Working..."
	hash = sys.argv[1]
	print 'Plain text of %s ==> %s' % (hash,md5_decrypter('http://md5-decrypter.com/','data[Row][cripted]'))

if __name__ == '__main__':
	check_args()
	main()
